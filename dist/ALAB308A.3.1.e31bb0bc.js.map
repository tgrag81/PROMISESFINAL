{"version":3,"sources":["databases.js","index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","wait","ms","setTimeout","central","_x","_central","_callee","id","db","_callee$","_context","db1","_x2","_db","_callee2","data","json","_callee2$","_context2","fetch","concat","username","website","company","db2","_x3","_db2","_callee3","_callee3$","_context3","db3","_x4","_db3","_callee4","_callee4$","_context4","vault","_x5","_vault","_callee5","_callee5$","_context5","email","address","phone","_databases","require","delay","console","log","getUserData","dbs","reject","dbName","error","basicInfo","personalData","userData","street","suite","city","zipcode","geo","lat","lng","catchPhrase","bs","message","includes"],"mappings":"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","file":"ALAB308A.3.1.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n/**\n * Accepts a user id value and returns a string containing\n * the database that user's information can be found in.\n * @param {Number} id The user id.\n * @return {String} The name of the database to look up the user.\n */\nexport async function central(id) {\n  if (typeof id !== \"number\") throw new Error(\"Invalid Input -- Not a Number\");\n  if (id < 1 || id > 10) throw new Error(\"Invalid Input -- Out of Range\");\n\n  await wait(100); // Faking an \"external\" call here by adding a delay.\n  let db = \"db1\";\n  if (id > 4) db = \"db2\";\n  if (id > 7) db = \"db3\";\n\n  return db;\n}\n\n/**\n * Accepts a user id value and returns an object containing\n * username, website, and company data.\n * @param {Number} id The user id.\n * @return {Object} The user's username, website, and company data.\n */\nexport async function db1(id) {\n  if (typeof id !== \"number\") throw new Error(\"Invalid Input -- Not a Number\");\n  if (id < 1 || id > 4) throw new Error(\"Invalid Input -- Out of Range\");\n\n  const data = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const json = await data.json();\n\n  return {\n    username: json.username,\n    website: json.website,\n    company: json.company\n  };\n}\n/**\n * Accepts a user id value and returns an object containing\n * username, website, and company data.\n * @param {Number} id The user id.\n * @return {Object} The user's username, website, and company data.\n */\nexport async function db2(id) {\n  if (typeof id !== \"number\") throw new Error(\"Invalid Input -- Not a Number\");\n  if (id < 5 || id > 7) throw new Error(\"Invalid Input -- Out of Range\");\n\n  const data = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const json = await data.json();\n\n  return {\n    username: json.username,\n    website: json.website,\n    company: json.company\n  };\n}\n/**\n * Accepts a user id value and returns an object containing\n * username, website, and company data.\n * @param {Number} id The user id.\n * @return {Object} The user's username, website, and company data.\n */\nexport async function db3(id) {\n  if (typeof id !== \"number\") throw new Error(\"Invalid Input -- Not a Number\");\n  if (id < 8 || id > 10) throw new Error(\"Invalid Input -- Out of Range\");\n\n  const data = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const json = await data.json();\n\n  return {\n    username: json.username,\n    website: json.website,\n    company: json.company\n  };\n}\n\n/**\n * Accepts a user id value and returns an object containing\n * name, email, address, and phone data.\n * @param {Number} id The user id.\n * @return {Object} The user's name, email, address, and phone data.\n */\nexport async function vault(id) {\n  if (typeof id !== \"number\") throw new Error(\"Invalid Input -- Not a Number\");\n  if (id < 1 || id > 10) throw new Error(\"Invalid Input -- Out of Range\");\n\n  const data = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const json = await data.json();\n\n  return {\n    name: json.name,\n    email: json.email,\n    address: json.address,\n    phone: json.phone\n  };\n}\n","// Importing database functions. DO NOT MODIFY THIS LINE.\nimport { central, db1, db2, db3, vault } from \"./databases.js\";\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve,ms));\n\ndelay (100) .then ((() => console.log(getUserData)));\n\nfunction getUserData(id) {\n  const dbs = {\n    db1: (db1), \n    db2: (db2),\n    db3: (db3),\n  };\n}\n\nif (id <1 || id > 10) {\n  return Promise.reject(new Error(\"Invalid User ID.  ID MUST be between 1-10\"));\n\n}\ntry{\nconst dbName= await central(id);\nif (!dbs[dbName]) {\n  return Promise.reject(new Error(\"Database ${dbName} is not available!\"));\n}\n} catch (error) {\n  console.error(\"An error occurred:\", error);\n  return Promise.reject(new Error(\"An unexpected error occurred while processing the request.\"));\n}\nconst basicInfo = await dbs[dbName](id);\nconst personalData = await vault(id);\n\nconst userData = {\n\n  id,\n  name: personalData.name,\n  username: basicInfo.username,\n  email: personalData.email,\n  address: {\n      street: personalData.address.street,\n      suite: personalData.address.suite,\n      city: personalData.address.city,\n      zipcode: personalData.address.zipcode,\n      geo: {\n          lat: personalData.address.geo.lat,\n          lng: personalData.address.geo.lng,\n      }\n  },\n  phone: personalData.phone,\n  website: basicInfo.website,\n  company: {\n      name: basicInfo.company.name,\n      catchPhrase: basicInfo.company.catchPhrase,\n      bs: basicInfo.company.bs,\n  }\n}\n;\nreturn userData;\n\ntry {}\n\ncatch (error) {\n  if (error.message.includes('db1')) {\n      return Promise.reject(new Error(\"Failed to retrieve data from db1.\"));\n  }\n  if (error.message.includes('db2')) {\n      return Promise.reject(new Error(\"Failed to retrieve data from db2.\"));\n  }\n  if (error.message.includes('db3')) {\n      return Promise.reject(new Error(\"Failed to retrieve data from db3.\"));\n  }\n  if (error.message.includes('vault')) {\n      return Promise.reject(new Error(\"Failed to retrieve data from the vault.\"));\n  }\n\n  return Promise.reject(error);\n} \n\n\n"]}